using Acme.Common;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Acm.BLNew
{
    /// <summary>
    /// a child class with base class called "Entity base" and an interface called "ILoggable"
    /// </summary>
    public class Customer : EntityBase, ILoggable
    {
        //two constructors are created for the customer class, the second constructor contains the customer id and address list
        public Customer() : this(0)
        {

        }
        public Customer(int customerId)
        {
            CustomerId = customerId;
            AddressList = new List<Address>();
        }
        /// <summary>
        /// autogenerated properties for the customer class
        /// these include the address list, customer id, the type of customer, email address of the customer, first name and lastname concatenated to give the full name
        /// </summary>
        public List<Address> AddressList { get; set; }
        public int CustomerId { get; private set; }
        public int CustomerType { get; set; }

        public string EmailAddress { get; set; }

        public string FirstName { get; set; }

        private string _lastName;
        public string LastName
        {
            get
            {
                return _lastName;
            }
            set
            {
                _lastName = value;
            }
        }
        public string FullName
        {
            get { return LastName + "" + FirstName; }
        }
        //the method below is an implementation from the ILoggable interface. It logs some info to the LoggingService class
        public string Log() => $"{CustomerId}: {FullName} Email: {EmailAddress} Status: {EntityState.ToString()}";
        
        public override string ToString() => EmailAddress;

        //the abstract method is overriden from the entity base class to give its own implementation 
        public override bool Validate()
        {
            var isValid = true;
            if (string.IsNullOrWhiteSpace(LastName)) isValid = false;
            if (string.IsNullOrWhiteSpace(EmailAddress)) isValid = false;
            return isValid;
        }

    }
}
